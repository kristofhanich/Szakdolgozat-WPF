/*
Deployment script for gravirozasDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "gravirozasDB"
:setvar DefaultFilePrefix "gravirozasDB"
:setvar DefaultDataPath "C:\Users\hanic\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\hanic\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Aru]...';


GO
CREATE TABLE [dbo].[Aru] (
    [Id]        INT            IDENTITY (1, 1) NOT NULL,
    [Nev]       NVARCHAR (255) NOT NULL,
    [Leiras]    TEXT           NOT NULL,
    [Mennyiseg] INT            NOT NULL,
    [Ar]        INT            NOT NULL,
    [Kep]       NVARCHAR (255) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Kapcsolat]...';


GO
CREATE TABLE [dbo].[Kapcsolat] (
    [ID]       INT      IDENTITY (1, 1) NOT NULL,
    [UgyfelID] INT      NOT NULL,
    [AruID]    INT      NOT NULL,
    [Datum]    DATETIME NOT NULL,
    [HatarIdo] DATETIME NOT NULL,
    [Darab]    INT      NOT NULL,
    [TeljesAr] INT      NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Kapcsolat].[ugyfelxindex]...';


GO
CREATE NONCLUSTERED INDEX [ugyfelxindex]
    ON [dbo].[Kapcsolat]([UgyfelID] ASC);


GO
PRINT N'Creating [dbo].[Kapcsolat].[Aruindex]...';


GO
CREATE NONCLUSTERED INDEX [Aruindex]
    ON [dbo].[Kapcsolat]([AruID] ASC);


GO
PRINT N'Creating [dbo].[Ugyfel]...';


GO
CREATE TABLE [dbo].[Ugyfel] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Nev]         NVARCHAR (255) NOT NULL,
    [Cim]         NVARCHAR (255) NOT NULL,
    [Telefonszam] NVARCHAR (20)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AruAvailable]...';


GO
CREATE PROCEDURE [dbo].[AruAvailable]
	@Id int
AS
BEGIN
SELECT
[dbo].[Aru].[Mennyiseg]
FROM
[dbo].[Aru]
WHERE
[dbo].[Aru].[Id] = @Id
END
GO
PRINT N'Creating [dbo].[AruCreate]...';


GO
CREATE PROCEDURE [dbo].[AruCreate]
	@Nev NVARCHAR(255),
	@Leiras TEXT,
	@Mennyiseg int,
	@Ar INT,
	@Kep NVARCHAR(255)
AS
BEGIN
INSERT INTO [dbo].[Aru]
(
[Nev],[Leiras],[Mennyiseg],[Ar],[Kep]
)
VALUES
(
@Nev,@Leiras,@Mennyiseg,@Ar,@Kep
)

SELECT CONVERT(int,SCOPE_IDENTITY());
END
GO
PRINT N'Creating [dbo].[AruDelete]...';


GO
CREATE PROCEDURE [dbo].[AruDelete]
	@Id int
AS
BEGIN
DELETE [dbo].[Aru]
WHERE [dbo].[Aru].[Id] = @Id
END
GO
PRINT N'Creating [dbo].[AruFelvitel]...';


GO
CREATE PROCEDURE [dbo].[AruFelvitel]
	@Nev NVARCHAR(255),
	@Leiras TEXT,
	@Mennyiseg int,
	@Ar INT,
	@Kep NVARCHAR(255)
AS
BEGIN
INSERT INTO [dbo].[Aru]
(
[Nev],[Leiras],[Mennyiseg],[Ar],[Kep]
)
VALUES
(
@Nev,@Leiras,@Mennyiseg,@Ar,@Kep
)

SELECT CONVERT(int,SCOPE_IDENTITY());
END
GO
PRINT N'Creating [dbo].[AruGetAll]...';


GO
CREATE PROCEDURE [dbo].[AruGetAll]

AS
BEGIN
SELECT
[dbo].[Aru].[Id],
[dbo].[Aru].[Nev],
[dbo].[Aru].[Leiras],
[dbo].[Aru].[Mennyiseg],
[dbo].[Aru].[Ar],
[dbo].[Aru].[Kep]
FROM
[dbo].[Aru]
END
GO
PRINT N'Creating [dbo].[AruGetByID]...';


GO
CREATE PROCEDURE [dbo].[AruGetByID]
	@Id int
AS
BEGIN
SELECT
[dbo].[Aru].[Id],
[dbo].[Aru].[Nev],
[dbo].[Aru].[Leiras],
[dbo].[Aru].[Mennyiseg],
[dbo].[Aru].[Ar],
[dbo].[Aru].[Kep]
FROM
[dbo].[Aru]
WHERE
[dbo].[Aru].[Id] =@Id
END
GO
PRINT N'Creating [dbo].[AruGetByName]...';


GO
CREATE PROCEDURE [dbo].[AruGetByName]
	@nev nvarchar(255)
AS
BEGIN
SELECT
[dbo].[Aru].[Id],
[dbo].[Aru].[Nev],
[dbo].[Aru].[Leiras],
[dbo].[Aru].[Mennyiseg],
[dbo].[Aru].[Ar],
[dbo].[Aru].[Kep]
FROM
[dbo].[Aru]
WHERE
[dbo].[Aru].[Nev] =@nev
END
GO
PRINT N'Creating [dbo].[AruUpdate]...';


GO
CREATE PROCEDURE [dbo].[AruUpdate]
	@Id INT,
	@Nev NVARCHAR(255),
	@Leiras Text,
	@Mennyiseg int,
	@Ar INT,
	@Kep NVARCHAR(255)
AS
BEGIN
UPDATE [dbo].[Aru]
SET
Nev=@Nev,
Leiras=@Leiras,
Mennyiseg=@Mennyiseg,
Ar=@Ar,
Kep=@Kep
WHERE
[dbo].[Aru].[Id] = @Id
END
GO
PRINT N'Creating [dbo].[AruUpdateMennyiseg]...';


GO
CREATE PROCEDURE [dbo].[AruUpdateMennyiseg]
	@Id INT,
	@Mennyiseg int
AS
BEGIN
UPDATE [dbo].[Aru]
SET
[Mennyiseg] = @Mennyiseg
WHERE
[dbo].[Aru].[Id] = @Id
END
GO
PRINT N'Creating [dbo].[CreateKapcsolat]...';


GO
CREATE PROCEDURE [dbo].[CreateKapcsolat]
	@UgyfelID int,
	@AruID int,
	@Darab int,
	@HatarIdo DateTime,
	@TeljesAr int
AS
BEGIN
INSERT INTO [dbo].Kapcsolat
(
[UgyfelID],[AruID],[Datum],[Darab],HatarIdo,[TeljesAr]
)
VALUES
(
@UgyfelID,@AruID,GETDATE(),@Darab,@HatarIdo,@TeljesAr
)
END
GO
PRINT N'Creating [dbo].[KapcsolatGetAll]...';


GO
CREATE PROCEDURE [dbo].[KapcsolatGetAll]

AS
BEGIN
SELECT
[dbo].[Kapcsolat].[UgyfelID],
[dbo].[Kapcsolat].[AruID],
[dbo].[Kapcsolat].[Datum],
[dbo].[Kapcsolat].[HatarIdo],
[dbo].[Kapcsolat].[Darab],
[dbo].[Kapcsolat].[TeljesAr]
FROM
[dbo].[Kapcsolat]
END
GO
PRINT N'Creating [dbo].[KapcsolatGetByID]...';


GO
CREATE PROCEDURE [dbo].[KapcsolatGetByID]
	
@Id int
AS
BEGIN
SELECT
[dbo].[Kapcsolat].[Id],
[dbo].[Kapcsolat].[AruID],
[dbo].[Kapcsolat].[UgyfelID],
[dbo].[Kapcsolat].[Darab],
[dbo].[Kapcsolat].[Datum],
[dbo].[Kapcsolat].[HatarIdo],
[dbo].[Kapcsolat].[TeljesAr]
FROM
[dbo].[Kapcsolat]
where
[dbo].[Kapcsolat].[Id] = @Id
END
GO
PRINT N'Creating [dbo].[KapcsolatListaGetAll]...';


GO
CREATE PROCEDURE [dbo].[KapcsolatListaGetAll]
AS
BEGIN
SELECT
[dbo].[Ugyfel].[Nev] as UgyfelNev,
[dbo].[Aru].[Nev] as AruNev,
[dbo].[Kapcsolat].[Datum],
[dbo].[Kapcsolat].[HatarIdo],
[dbo].[Kapcsolat].[Darab],
[dbo].[Kapcsolat].[TeljesAr]
FROM
[dbo].[Kapcsolat]
INNER JOIN 
Ugyfel ON
Kapcsolat.UgyfelID=Ugyfel.Id
INNER JOIN 
Aru ON
Aru.Id=Kapcsolat.AruID
END
GO
PRINT N'Creating [dbo].[UgyfelCreate]...';


GO
CREATE PROCEDURE [dbo].[UgyfelCreate]
	@Nev NVARCHAR(255),
	@Cim NVARCHAR(255),
	@Telefonszam NVARCHAR(255)
AS
BEGIN
INSERT INTO [dbo].[Ugyfel]
(
[Nev],[Cim],[Telefonszam]
)
VALUES
(
@Nev,@Cim,@Telefonszam
)

SELECT CONVERT(int,SCOPE_IDENTITY());
END
GO
PRINT N'Creating [dbo].[UgyfelDelete]...';


GO
CREATE PROCEDURE [dbo].[UgyfelDelete]
	@Id int
AS
BEGIN
DELETE [dbo].[Ugyfel]
WHERE [dbo].[Ugyfel].[Id] = @Id
END
GO
PRINT N'Creating [dbo].[UgyfelGetAll]...';


GO
CREATE PROCEDURE [dbo].[UgyfelGetAll]

AS
BEGIN
SELECT
[dbo].[Ugyfel].[Id],
[dbo].[Ugyfel].[Nev],
[dbo].[Ugyfel].[Cim],
[dbo].[Ugyfel].[Telefonszam]
FROM
[dbo].[Ugyfel]
END
GO
PRINT N'Creating [dbo].[UgyfelGetByID]...';


GO
CREATE PROCEDURE [dbo].[UgyfelGetByID]
	@Id int
AS
BEGIN
SELECT
[dbo].[Ugyfel].[Id],
[dbo].[Ugyfel].[Nev],
[dbo].[Ugyfel].[Cim],
[dbo].[Ugyfel].[Telefonszam]
FROM
[dbo].[Ugyfel]
where
[dbo].[Ugyfel].[Id] = @Id
END
GO
PRINT N'Creating [dbo].[UgyfelListaGetAll]...';


GO
CREATE PROCEDURE [dbo].[UgyfelListaGetAll]
AS
BEGIN
SELECT
[dbo].[Ugyfel].[Nev],
[dbo].[Ugyfel].[Cim],
[dbo].[Ugyfel].[Telefonszam]
FROM
[dbo].[Ugyfel]
END
GO
PRINT N'Creating [dbo].[UgyfelUpdate]...';


GO
CREATE PROCEDURE [dbo].[UgyfelUpdate]
	@Id INT,
	@Nev NVARCHAR(255),
	@Cim NVARCHAR(255),
	@Telefonszam NVARCHAR(255)
AS
BEGIN
UPDATE [dbo].[Ugyfel]
SET
[Nev] = @Nev,
[Cim] = @Cim,
[Telefonszam] = @Telefonszam
WHERE
[dbo].[Ugyfel].[Id] = @Id
END
GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
